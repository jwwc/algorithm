基本思想：
1：在点集中任意取三个点A，B，C
2：作为一个包含A，B，C三点的最小圆，圆周可能通过这三点，也可能只通过其中的两点，但是包含第三点，后一种情况圆周上的两点一定是圆的一条直径的两端
3：在点集中找出距离第二步所建圆心距离最圆的点，若D点已经在圆内或者在圆上，则该圆即位所求的圆，算法结束，否则执行第四步
4：在A，B，C，D中选取三点，使它们生成一个包含这四个点的圆最小，这三点成为新的A，B，C，返回执行第二步，若在第四步生成的圆的圆周只通过A，B，C，D中
的两点，则圆周上的两点取成新的A，B，从另外两点中任意取一点为新的C点
解题思路：
设想有一个足够大的圆，逐渐缩小这个圆，并移动这个圆，直到有两个点在这个圆上，如果两个点的连线不是这个圆的直径，那么就可以缩小这个圆，直到出现另外
一个点在这个圆周上，这个三点所确定的圆就是所求的圆
实现思路：
先求出两点之间的最远距离，以这两个点为直径画圆，如果包含所有的点，那么这就是所求的解，如果不能包含所有的点就说明有三点及三点都在这个圆上，根据三点
确定一个圆，只有枚举出所有的三点成立的圆，在比较所成立圆的半径，求出最小半径的圆
